<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="com.niajafarve.web.ethicchallenge">
    <property environment="env"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="dist.home"     value="${basedir}/dist"/>
    <property name="source" value="1.8"/>
    <property name="dirs.base" value="${basedir}"/>
    <property name="classdir" value="${dirs.base}/build/src"/>
    <property name="src" value="${dirs.base}/src"/>
    <property file="build.properties" />
              	
   

    <path id="Apache Tomcat v9.0 [Apache Tomcat v9.0].libraryclasspath">
        <pathelement location="../../../Downloads/apache-tomcat-9.0.0.M20/lib/annotations-api.jar"/>
        <pathelement location="../../../Downloads/apache-tomcat-9.0.0.M20/lib/catalina-ant.jar"/>
        <pathelement location="../../../Downloads/apache-tomcat-9.0.0.M20/lib/catalina-ha.jar"/>
        <pathelement location="../../../Downloads/apache-tomcat-9.0.0.M20/lib/catalina-storeconfig.jar"/>
        <pathelement location="../../../Downloads/apache-tomcat-9.0.0.M20/lib/catalina-tribes.jar"/>
        <pathelement location="../../../Downloads/apache-tomcat-9.0.0.M20/lib/catalina.jar"/>
        <pathelement location="../../../Downloads/apache-tomcat-9.0.0.M20/lib/ecj-4.6.1.jar"/>
        <pathelement location="../../../Downloads/apache-tomcat-9.0.0.M20/lib/el-api.jar"/>
        <pathelement location="../../../Downloads/apache-tomcat-9.0.0.M20/lib/jasper-el.jar"/>
        <pathelement location="../../../Downloads/apache-tomcat-9.0.0.M20/lib/jasper.jar"/>
        <pathelement location="../../../Downloads/apache-tomcat-9.0.0.M20/lib/jaspic-api.jar"/>
        <pathelement location="../../../Downloads/apache-tomcat-9.0.0.M20/lib/jsp-api.jar"/>
        <pathelement location="../../../Downloads/apache-tomcat-9.0.0.M20/lib/servlet-api.jar"/>
        <pathelement location="../../../Downloads/apache-tomcat-9.0.0.M20/lib/tomcat-api.jar"/>
        <pathelement location="../../../Downloads/apache-tomcat-9.0.0.M20/lib/tomcat-coyote.jar"/>
        <pathelement location="../../../Downloads/apache-tomcat-9.0.0.M20/lib/tomcat-dbcp.jar"/>
        <pathelement location="../../../Downloads/apache-tomcat-9.0.0.M20/lib/tomcat-i18n-es.jar"/>
        <pathelement location="../../../Downloads/apache-tomcat-9.0.0.M20/lib/tomcat-i18n-fr.jar"/>
        <pathelement location="../../../Downloads/apache-tomcat-9.0.0.M20/lib/tomcat-i18n-ja.jar"/>
        <pathelement location="../../../Downloads/apache-tomcat-9.0.0.M20/lib/tomcat-jdbc.jar"/>
        <pathelement location="../../../Downloads/apache-tomcat-9.0.0.M20/lib/tomcat-jni.jar"/>
        <pathelement location="../../../Downloads/apache-tomcat-9.0.0.M20/lib/tomcat-util-scan.jar"/>
        <pathelement location="../../../Downloads/apache-tomcat-9.0.0.M20/lib/tomcat-util.jar"/>
        <pathelement location="../../../Downloads/apache-tomcat-9.0.0.M20/lib/tomcat-websocket.jar"/>
        <pathelement location="../../../Downloads/apache-tomcat-9.0.0.M20/lib/websocket-api.jar"/>
    </path>
    <path id="Web App Libraries.libraryclasspath">
        <pathelement location="WebContent/WEB-INF/lib/commons-io-2.5.jar"/>
        <pathelement location="WebContent/WEB-INF/lib/gson-2.8.0.jar"/>
        <pathelement location="WebContent/WEB-INF/lib/jstl-1.2.jar"/>
    </path>
    <path id="EAR Libraries.libraryclasspath"/>
    <path id="JUnit 4.libraryclasspath">
        <pathelement location="../../../.p2/pool/plugins/org.junit_4.12.0.v201504281640/junit.jar"/>
        <pathelement location="../../../.p2/pool/plugins/org.hamcrest.core_1.3.0.v201303031735.jar"/>
    </path>
    <path id="com.niajafarve.web.ethicchallenge.classpath">
    	<fileset dir="WebContent/WEB-INF/lib" includes="*.jar" />
        <pathelement location="build/classes"/>
        <path refid="Apache Tomcat v9.0 [Apache Tomcat v9.0].libraryclasspath"/>
        <path refid="Web App Libraries.libraryclasspath"/>
        <path refid="EAR Libraries.libraryclasspath"/>
        <pathelement location="../../../Downloads/commons-fileupload-1.3.2-bin/lib/commons-fileupload-1.3.2.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="../../../Downloads/commons-io-2.5/commons-io-2.5.jar"/>
        <pathelement location="../../../Downloads/gson-2.8.0.jar"/>
    </path>
              	
    <taskdef name="start" classname="org.apache.catalina.ant.StartTask">
    	<classpath refid ="com.niajafarve.web.ethicchallenge.classpath"/>
    </taskdef>

    <taskdef name="stop" classname="org.apache.catalina.ant.StopTask">
    	<classpath refid ="com.niajafarve.web.ethicchallenge.classpath"/>
    </taskdef>
    
    <taskdef name="deploy" classname="org.apache.catalina.ant.DeployTask"> 
              	<classpath refid ="com.niajafarve.web.ethicchallenge.classpath"/>
    </taskdef>
    
    <taskdef name="undeploy" classname="org.apache.catalina.ant.UndeployTask">
    	<classpath refid ="com.niajafarve.web.ethicchallenge.classpath"/>
    </taskdef>
    <target name="init">
    	<mkdir dir="${dirs.base}/build/src"/>
        <mkdir dir="build/classes"/>
        <copy includeemptydirs="false" todir="build/classes">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="build/classes"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build">
    	<echo message="compiling servlet ...."/>
    	<javac srcdir="${src}" destdir="${classdir}" debug="true" includes="**/*.java" >
    		<classpath refid ="com.niajafarve.web.ethicchallenge.classpath"/>
    	</javac>
    </target>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="build/classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="com.niajafarve.web.ethicchallenge.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target name="FileMetricsTest (1)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="com.niajafarve.web.ethicchallenge.filemetrics.FileMetricsTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="com.niajafarve.web.ethicchallenge.classpath"/>
        </junit>
    </target>
    <target name="FileMetricsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="com.niajafarve.web.ethicchallenge.servlet.FileMetricsTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="com.niajafarve.web.ethicchallenge.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
    <target name="war" description="Bundles the application as a WAR file" depends="clean, build">
    	<mkdir dir="WebContent/WEB-INF/classes"/>
    	
    	<copy includeemptydirs="false" todir="WebContent/WEB-INF/classes">
    		<fileset dir="build/classes">
    		<include name="**/*.class"/>
    		</fileset>
    	</copy>
    	<war destfile="EthicCodeChallenge.war"
    		basedir="WebContent"
    		needxmlfile="false">
    	</war>
    </target>
    <target name="deploy" description="deploy to tomcat">
         <echo>deploying from client</echo>
         <deploy 
         url="${tomcat-manager-url}"
         username="${tomcat-manager-username}"
         password="${tomcat-manager-password}"
         path="/ethic"
         war="file:EthicCodeChallenge.war"/>
	</target>
              	
	<target name="undeploy" description="undeploy from tomcat">
		<undeploy 
			failonerror="no"
            url="${tomcat-manager-url}"
			username="${tomcat-manager-username}"
			password="${tomcat-manager-password}"
			path="/ethic"
		/>
	</target>
              		
    <target name="stop" description="stop application in tomcat">
		<stop url="${tomcat-manager-url}" username="${tomcat-manager-username}"
	    password="${tomcat-manager-password}" path="/ethic" />
	</target>
    
    <target name="start" description="start application in tomcat">
         <start url="${tomcat-manager-url}" username="${tomcat-manager-username}"
         password="${tomcat-manager-password}" path="/ethic" />
    </target>
</project>
